{"version":3,"file":"wat-type.js","sources":["../src/lib/wat-type.js"],"sourcesContent":["const watType = (type) => {\n  let _type = /^\\[.+\\ +(.+)\\]$/.exec(Object.prototype.toString.call(type))[1]\n\n  if (_type === 'Number') {\n    _type = type !== type ? 'NaN' : _type\n  }\n  if (_type.startsWith('HTML') && _type.endsWith('Element')) {\n    _type = 'HTMLElement'\n  }\n  // [object String]\n  // [object Number]\n  // [object Boolean\n  // [object Null]\n  // [object Undefined]\n  // [object Object]\n  // [object RegExp]\n  // [object Function]\n  // [object Array]\n  // TODO: figure out Symbol type\n\n  return _type\n}\n\nconst isString = (type) => {\n  return watType(type) === 'String'\n}\n\nconst isNumber = (type) => {\n  return watType(type) === 'Number'\n}\n\nconst isBoolean = (type) => {\n  return watType(type) === 'Boolean'\n}\n\nconst isNull = (type) => {\n  return watType(type) === 'Null'\n}\n\nconst isUndefined = (type) => {\n  return watType(type) === 'Undefined'\n}\n\nconst isNaN = (type) => {\n  return watType(type) === 'NaN'\n}\n\nconst isObject = (type) => {\n  return watType(type) === 'Object'\n}\n\nconst isFunction = (type) => {\n  return watType(type) === 'Function'\n}\n\nconst isRegExp = (type) => {\n  return watType(type) === 'RegExp'\n}\n\nconst isArray = (type) => {\n  return watType(type) === 'Array'\n}\n\nconst isHTMLElement = (type) => {\n  return watType(type) === 'HTMLElement'\n}\n\nexport default {\n  watType,\n  isString,\n  isNumber,\n  isBoolean,\n  isNull,\n  isUndefined,\n  isNaN,\n  isObject,\n  isFunction,\n  isRegExp,\n  isHTMLElement\n}\n\nexport {\n  watType,\n  isString,\n  isNumber,\n  isBoolean,\n  isNull,\n  isUndefined,\n  isNaN,\n  isObject,\n  isFunction,\n  isRegExp,\n  isHTMLElement\n}"],"names":["watType","type","_type","exec","Object","prototype","toString","call","startsWith","endsWith","isString","isNumber","isBoolean","isNull","isUndefined","isNaN","isObject","isFunction","isRegExp","isHTMLElement"],"mappings":";;;;;;MAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;EACxB,MAAIC,KAAK,GAAG,kBAAkBC,IAAlB,CAAuBC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BN,IAA/B,CAAvB,EAA6D,CAA7D,CAAZ;;EAEA,MAAIC,KAAK,KAAK,QAAd,EAAwB;EACtBA,IAAAA,KAAK,GAAGD,IAAI,KAAKA,IAAT,GAAgB,KAAhB,GAAwBC,KAAhC;EACD;;EACD,MAAIA,KAAK,CAACM,UAAN,CAAiB,MAAjB,KAA4BN,KAAK,CAACO,QAAN,CAAe,SAAf,CAAhC,EAA2D;EACzDP,IAAAA,KAAK,GAAG,aAAR;EACD,GARuB;EAUxB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEA,SAAOA,KAAP;EACD,CArBD;;AAuBA,MAAMQ,QAAQ,GAAG,SAAXA,QAAW,CAACT,IAAD,EAAU;EACzB,SAAOD,OAAO,CAACC,IAAD,CAAP,KAAkB,QAAzB;EACD,CAFD;;AAIA,MAAMU,QAAQ,GAAG,SAAXA,QAAW,CAACV,IAAD,EAAU;EACzB,SAAOD,OAAO,CAACC,IAAD,CAAP,KAAkB,QAAzB;EACD,CAFD;;AAIA,MAAMW,SAAS,GAAG,SAAZA,SAAY,CAACX,IAAD,EAAU;EAC1B,SAAOD,OAAO,CAACC,IAAD,CAAP,KAAkB,SAAzB;EACD,CAFD;;AAIA,MAAMY,MAAM,GAAG,SAATA,MAAS,CAACZ,IAAD,EAAU;EACvB,SAAOD,OAAO,CAACC,IAAD,CAAP,KAAkB,MAAzB;EACD,CAFD;;AAIA,MAAMa,WAAW,GAAG,SAAdA,WAAc,CAACb,IAAD,EAAU;EAC5B,SAAOD,OAAO,CAACC,IAAD,CAAP,KAAkB,WAAzB;EACD,CAFD;;AAIA,MAAMc,KAAK,GAAG,SAARA,KAAQ,CAACd,IAAD,EAAU;EACtB,SAAOD,OAAO,CAACC,IAAD,CAAP,KAAkB,KAAzB;EACD,CAFD;;AAIA,MAAMe,QAAQ,GAAG,SAAXA,QAAW,CAACf,IAAD,EAAU;EACzB,SAAOD,OAAO,CAACC,IAAD,CAAP,KAAkB,QAAzB;EACD,CAFD;;AAIA,MAAMgB,UAAU,GAAG,SAAbA,UAAa,CAAChB,IAAD,EAAU;EAC3B,SAAOD,OAAO,CAACC,IAAD,CAAP,KAAkB,UAAzB;EACD,CAFD;;AAIA,MAAMiB,QAAQ,GAAG,SAAXA,QAAW,CAACjB,IAAD,EAAU;EACzB,SAAOD,OAAO,CAACC,IAAD,CAAP,KAAkB,QAAzB;EACD,CAFD;;AAQA,MAAMkB,aAAa,GAAG,SAAhBA,aAAgB,CAAClB,IAAD,EAAU;EAC9B,SAAOD,OAAO,CAACC,IAAD,CAAP,KAAkB,aAAzB;EACD,CAFD;;AAIA,kBAAe;EACbD,EAAAA,OAAO,EAAPA,OADa;EAEbU,EAAAA,QAAQ,EAARA,QAFa;EAGbC,EAAAA,QAAQ,EAARA,QAHa;EAIbC,EAAAA,SAAS,EAATA,SAJa;EAKbC,EAAAA,MAAM,EAANA,MALa;EAMbC,EAAAA,WAAW,EAAXA,WANa;EAObC,EAAAA,KAAK,EAALA,KAPa;EAQbC,EAAAA,QAAQ,EAARA,QARa;EASbC,EAAAA,UAAU,EAAVA,UATa;EAUbC,EAAAA,QAAQ,EAARA,QAVa;EAWbC,EAAAA,aAAa,EAAbA;EAXa,CAAf;;;;;;;;;;;;;;;;;;;;;;;"}